{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "Select a VPC that allows instances to access the Internet."
    },
    "SubnetId": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Select at least two subnets in your selected VPC."
    },
    "SecurityGroupId": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>",
      "Description": "Select a Security Group within your selected VPC."
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup::Id",
      "Description": "Select a Target Group within your selected VPC."
    }
  },
  "Resources": {
    "MountTargetVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MountTargetVPC"
          }
        ]
      }
    },
    "MountTargetSubnetOne": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": "us-gov-west-1a"
      }
    },
    "MountTargetSubnetTwo": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": "us-gov-west-1b"
      }
    },
    "FileSystemResource": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "FileSystemId": {
          "Ref": "FileSystemId"
        },
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "Aero-FileSystem"
          }
        ],
        "BackupPolicy": {
          "Status": "ENABLED"
        },
        "Encrypted": true
      }
    },
    "Policy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "Statement",
              "Effect": "Allow",
              "Principal": "*",
              "Action": [
                "elasticfilesystem:ClientMount",
                "elasticfilesystem:ClientRootAccess",
                "elasticfilesystem:ClientWrite"
              ],
              "Resource": "*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              }
            }
          ]
        }
      }
    },
    "AccessPoint": {
      "Type": "AWS::EFS::AccessPoint",
      "Properties": {
        "FileSystemId": {
          "Ref": "FileSystemId"
        },
        "PosixUser": {
          "Uid": "1000",
          "Gid": "1000"
        }
      }
    },
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ECSCluster"
        },
        "DesiredCount": 1,
        "EnableExecuteCommand": true,
        "LaunchType": "EC2",
        "TaskDefinition": {
          "Ref": "ECSTaskDefinition"
        },
        "LoadBalancers": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            },
            "ContainerPort": 80,
            "ContainerName": "Strapi-app",
            "SecurityGroups": [
              {
                "Ref": "SecurityGroupId"
              }
            ]
          }
        ]
      }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
      "VpcId": {
        "Type": "AWS::EC2::VPC::Id",
        "Description": "Select a VPC that allows instances to access the Internet."
      },
      "SubnetId": {
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Description": "Select at least two subnets in your selected VPC."
      },
      "SecurityGroupId": {
        "Type": "List<AWS::EC2::SecurityGroup::Id>",
        "Description": "Select a Security Group within your selected VPC."
      },
      "TargetGroup": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup::Id",
        "Description": "Select a Target Group within your selected VPC."
      }
    },
    "Resources": {
      "LoadBalancer": {
        "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "Properties": {
          "Subnets": {
            "Ref": "SubnetId"
          },
          "SecurityGroups": [
            {
              "Ref": "SecurityGroupId"
            }
          ],
          "Listeners": [
            {
              "LoadBalancerPort": "80",
              "InstancePort": "80",
              "Protocol": "HTTP"
            }
          ]
        }
      },
      "BackendTargetGroup": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties": {
          "Name": "backend_TG",
          "Port": 1337,
          "Protocol": "HTTP",
          "VpcId": {
            "Ref": "VpcId"
          },
          "TargetType": "ip",
          "HealthCheckEnabled": true,
          "HealthCheckIntervalSeconds": 300,
          "HealthCheckProtocol": "HTTP",
          "HealthyThresholdCount": 3,
          "Matcher": "200-299",
          "UnhealthyThresholdCount": 2,
          "HealthCheckTimeoutSeconds": 30,
          "HealthCheckPath": "/_health"
        }
      },
      "FrontendTargetGroup": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties": {
          "Name": "frontend_TG",
          "Port": 3000,
          "Protocol": "HTTP",
          "VpcId": {
            "Ref": "VpcId"
          },
          "TargetType": "ip",
          "HealthCheckEnabled": true,
          "HealthCheckIntervalSeconds": 300,
          "HealthCheckProtocol": "HTTP",
          "HealthyThresholdCount": 3,
          "Matcher": "200-299",
          "UnhealthyThresholdCount": 2,
          "HealthCheckTimeoutSeconds": 30,
          "HealthCheckPath": "/_health"
        }
      },
      "BackendListenerRule": {
        "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
        "Properties": {
          "ListenerArn": "arn:aws-us-gov:elasticloadbalancing:us-gov-west-1:306251499781:loadbalancer/app/lb-aero-wmd-apis/170fc9e31efe3078",
          "Priority": 1,
          "Conditions": [
            {
              "Field": "path-pattern",
              "Values": [
                "/backend*"
              ]
            }
          ],
          "Actions": [
            {
              "Type": "forward",
              "TargetGroupArn": {
                "Ref": "BackendTargetGroup"
              }
            }
          ]
        }
      },
      "FrontendListenerRule": {
        "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
        "Properties": {
          "ListenerArn": "arn:aws-us-gov:elasticloadbalancing:us-gov-west-1:306251499781:loadbalancer/app/lb-aero-wmd-apis/170fc9e31efe3078",
          "Priority": 2,
          "Conditions": [
            {
              "Field": "path-pattern",
              "Values": [
                "/frontend*"
              ]
            }
          ],
          "Actions": [
            {
              "Type": "forward",
              "TargetGroupArn": {
                "Ref": "FrontendTargetGroup"
              }
            }
          ]
        }
      },
      "ALBSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "ALB Security Group",
          "VpcId": {
            "Ref": "VpcId"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 80,
              "ToPort": 80,
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": 3000,
              "ToPort": 3000,
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "BackendSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Backend Security Group",
          "VpcId": {
            "Ref": "VpcId"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 1337,
              "ToPort": 1337,
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      }
    }
  }
}
