const response = require('cfn-response');
const aws = require('aws-sdk');
const efs = new aws.efs({ region: 'us-east-1' }); // Replace with your desired region

exports.handler = async (event, context) => {
  console.log('Received event:', JSON.stringify(event, null, 2);

  try {
    if (event.RequestType === 'Create' || event.RequestType === 'Update') {
      const rootDirectory = event.ResourceProperties.RootDirectory;
      const fileSystemId = 'fs-12345678'; // Replace with your EFS file system ID

      // Create the EFS mount target
      const mountTargetParams = {
        FileSystemId: fileSystemId,
        SubnetId: 'subnet-12345678', // Replace with your subnet ID
      };

      const mountTargetData = await efs.createMountTarget(mountTargetParams).promise();

      // Create the root directory
      const directoryParams = {
        FileSystemId: fileSystemId,
        Path: rootDirectory,
      };

      const directoryData = await efs.createAccessPoint(directoryParams).promise();

      // Send a SUCCESS response back to CloudFormation
      response.send(event, context, response.SUCCESS, {
        MountTargetId: mountTargetData.MountTargetId,
        AccessPointId: directoryData.AccessPointId,
      });
    } else if (event.RequestType === 'Delete') {
      // No need to do anything specific during stack deletion.
      response.send(event, context, response.SUCCESS);
    } else {
      // For unexpected RequestTypes, send a FAILED response.
      response.send(event, context, response.FAILED, {});
    }
  } catch (err) {
    console.log('Error:', err);
    // Send a FAILED response in case of an error.
    response.send(event, context, response.FAILED, {});
  }
};
