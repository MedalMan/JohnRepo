AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for Strapi with Application Load Balancer (ALB)

Resources:
  # Define the Application Load Balancer (ALB)
  StrapiALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: 
        - !Ref Subnet1  # Replace with your subnet IDs
        - !Ref Subnet2  # Replace with your subnet IDs
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Tags:
        - Key: Name
          Value: StrapiALB

  # Define the frontend target group
  StrapiFrontEndTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: StrapiFrontEndTG
      Port: 80  # Adjust the port as needed
      Protocol: HTTP
      VpcId: !Ref VPCId  # Replace with your VPC ID
      HealthCheckProtocol: HTTP
      HealthCheckPath: /  # Adjust the path as needed
      TargetType: ip
      Targets: []  # Add your targets here

  # Define the backend target group
  StrapiBackEndTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: StrapiBackEndTG
      Port: 1337  # Adjust the port as needed
      Protocol: HTTP
      VpcId: !Ref VPCId  # Replace with your VPC ID
      HealthCheckProtocol: HTTP
      HealthCheckPath: /_health  # Adjust the path as needed
      TargetType: ip
      Targets: []  # Add your targets here

  # Define the backend listener rule
  BackendListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref BackendListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /backend*  # Adjust the path pattern as needed
      Actions:
        - Type: forward
          TargetGroupArn: !Ref StrapiBackEndTG

  # Define the frontend listener rule
  FrontendListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref FrontendListener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /frontend*  # Adjust the path pattern as needed
      Actions:
        - Type: forward
          TargetGroupArn: !Ref StrapiFrontEndTG

  # Define the ALB security group
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ALBSecurityGroup
      Description: ALB Security Group
      VpcId: !Ref VPCId  # Replace with your VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80  # Adjust ports as needed
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Adjust IP range as needed

Outputs:
  ALBURL:
    Description: URL of the Application Load Balancer
    Value: !GetAtt StrapiALB.DNSName
